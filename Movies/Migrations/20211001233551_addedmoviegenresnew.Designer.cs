// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies;

namespace Movies.Migrations
{
    [DbContext(typeof(MoviesDbContext))]
    [Migration("20211001233551_addedmoviegenresnew")]
    partial class addedmoviegenresnew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieUser", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("MoviesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("MovieUser");
                });

            modelBuilder.Entity("Movies.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Animation"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Thriller"
                        });
                });

            modelBuilder.Entity("Movies.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Runningtime")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfRelease")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Runningtime = 143,
                            Title = "Skyfall",
                            YearOfRelease = 2012
                        },
                        new
                        {
                            Id = 2,
                            Runningtime = 136,
                            Title = "Star Wars: The Force Awakens",
                            YearOfRelease = 2015
                        },
                        new
                        {
                            Id = 3,
                            Runningtime = 125,
                            Title = "Bridesmaids",
                            YearOfRelease = 2011
                        },
                        new
                        {
                            Id = 4,
                            Runningtime = 99,
                            Title = "God Bless America",
                            YearOfRelease = 2012
                        },
                        new
                        {
                            Id = 5,
                            Runningtime = 148,
                            Title = "Zootopia",
                            YearOfRelease = 2016
                        },
                        new
                        {
                            Id = 6,
                            Runningtime = 109,
                            Title = "Coco",
                            YearOfRelease = 2017
                        },
                        new
                        {
                            Id = 7,
                            Runningtime = 116,
                            Title = "Us",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            Id = 8,
                            Runningtime = 89,
                            Title = "Relic",
                            YearOfRelease = 2020
                        },
                        new
                        {
                            Id = 9,
                            Runningtime = 138,
                            Title = "Shutter Island",
                            YearOfRelease = 2010
                        },
                        new
                        {
                            Id = 10,
                            Runningtime = 119,
                            Title = "The Silence of the Lambs",
                            YearOfRelease = 2001
                        });
                });

            modelBuilder.Entity("Movies.Models.MovieGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieGenres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 1,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 2,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 4,
                            GenreId = 2,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 5,
                            GenreId = 3,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 6,
                            GenreId = 3,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 7,
                            GenreId = 4,
                            MovieId = 7
                        },
                        new
                        {
                            Id = 8,
                            GenreId = 4,
                            MovieId = 8
                        },
                        new
                        {
                            Id = 9,
                            GenreId = 5,
                            MovieId = 9
                        },
                        new
                        {
                            Id = 10,
                            GenreId = 5,
                            MovieId = 10
                        },
                        new
                        {
                            Id = 11,
                            GenreId = 2,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 12,
                            GenreId = 2,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 13,
                            GenreId = 1,
                            MovieId = 9
                        },
                        new
                        {
                            Id = 14,
                            GenreId = 1,
                            MovieId = 10
                        });
                });

            modelBuilder.Entity("Movies.Models.MovieUserRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int?>("Ranking")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("MovieUserRankings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            Ranking = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            Ranking = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 3,
                            Ranking = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 4,
                            Ranking = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            MovieId = 5,
                            Ranking = 7,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            MovieId = 6,
                            Ranking = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            MovieId = 7,
                            Ranking = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            MovieId = 8,
                            Ranking = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            MovieId = 1,
                            Ranking = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            MovieId = 2,
                            Ranking = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            MovieId = 3,
                            Ranking = 10,
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            MovieId = 4,
                            Ranking = 6,
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            MovieId = 5,
                            Ranking = 7,
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            MovieId = 6,
                            Ranking = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 15,
                            MovieId = 7,
                            Ranking = 7,
                            UserId = 2
                        },
                        new
                        {
                            Id = 16,
                            MovieId = 8,
                            Ranking = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            MovieId = 3,
                            Ranking = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 18,
                            MovieId = 4,
                            Ranking = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            MovieId = 5,
                            Ranking = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 20,
                            MovieId = 6,
                            Ranking = 6,
                            UserId = 3
                        },
                        new
                        {
                            Id = 21,
                            MovieId = 7,
                            Ranking = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 22,
                            MovieId = 8,
                            Ranking = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 23,
                            MovieId = 9,
                            Ranking = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 24,
                            MovieId = 10,
                            Ranking = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Movies.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rick"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Perry"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jack"
                        });
                });

            modelBuilder.Entity("MovieUser", b =>
                {
                    b.HasOne("Movies.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Movies.Models.MovieGenre", b =>
                {
                    b.HasOne("Movies.Models.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies.Models.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Movies.Models.MovieUserRank", b =>
                {
                    b.HasOne("Movies.Models.Movie", "Movie")
                        .WithMany("MovieUserRankings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies.Models.User", "User")
                        .WithMany("MovieUserRankings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Movies.Models.Genre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("Movies.Models.Movie", b =>
                {
                    b.Navigation("MovieGenres");

                    b.Navigation("MovieUserRankings");
                });

            modelBuilder.Entity("Movies.Models.User", b =>
                {
                    b.Navigation("MovieUserRankings");
                });
#pragma warning restore 612, 618
        }
    }
}
